{
	"info": {
		"_postman_id": "99cd7ee9-aeaf-4e43-a801-af296dab38e2",
		"name": "JavaFilms",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24840274"
	},
	"item": [
		{
			"name": "Actors",
			"item": [
				{
					"name": "OK",
					"item": [
						{
							"name": "Get All Actores",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"pm.test(\"Your test name\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.be.an(\"array\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accep",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "localhost:8080/api/actors/v1",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"actors",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get All Actores Sort",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accep",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "localhost:8080/api/actors/v1?sort=lastName",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"actors",
										"v1"
									],
									"query": [
										{
											"key": "sort",
											"value": "lastName"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get All Actores Pageable Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"pm.test(\"Attributes\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.number).to.eql(5);\r",
											"    pm.expect(jsonData.content).to.be.an(\"array\");\r",
											"\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accep",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "localhost:8080/api/actors/v1?sort=firstName&page=5",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"actors",
										"v1"
									],
									"query": [
										{
											"key": "sort",
											"value": "firstName"
										},
										{
											"key": "page",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get One Actor",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Test body attributes\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).to.eql(1);\r",
											"    pm.expect(jsonData.name).to.eql(\"PENELOPE\");\r",
											"    pm.expect(jsonData.lastName).to.eql(\"GUINESS\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/api/actors/v1/1",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"actors",
										"v1",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Actors Films",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Response is Array\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.be.an(\"array\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/api/actors/v1/100/films",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"actors",
										"v1",
										"100",
										"films"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Actor",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Location\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{   \r\n    \"actorId\": 0,\r\n    \"firstName\": \"AS\",\r\n    \"lastName\": \"BBBBB\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/api/actors/v1",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"actors",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Modify Actor",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{   \r\n    \"actorId\": 211,\r\n    \"firstName\": \"AAAAAAASSSASASS\",\r\n    \"lastName\": \"BBBBB\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/api/actors/v1/211",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"actors",
										"v1",
										"211"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Actor",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "localhost:8080/api/actors/v1/55",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"actors",
										"v1",
										"55"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Actors News",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"pm.test(\"Your test name\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.be.an(\"array\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accep",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "localhost:8080/api/actors/v1/news",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"actors",
										"v1",
										"news"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Actors News With Time",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"pm.test(\"Your test name\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.be.an(\"array\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accep",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "localhost:8080/api/actors/v1/news?time=2023-04-01 00:00:00",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"actors",
										"v1",
										"news"
									],
									"query": [
										{
											"key": "time",
											"value": "2023-04-01 00:00:00"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "KO",
					"item": [
						{
							"name": "Get All Actores Sort",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 500\", function () {\r",
											"    pm.response.to.have.status(500);\r",
											"});\r",
											"pm.test(\"Your test name\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.detail).to.eql(\"No property 'otro' found for type 'Actor'\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accep",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "localhost:8080/api/actors/v1?sort=otro",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"actors",
										"v1"
									],
									"query": [
										{
											"key": "sort",
											"value": "otro"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get All Actores Sort 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 500\", function () {\r",
											"    pm.response.to.have.status(500);\r",
											"});\r",
											"pm.test(\"Your test name\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.detail).to.eql(\"Property must not be null or empty\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accep",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "localhost:8080/api/actors/v1?sort=",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"actors",
										"v1"
									],
									"query": [
										{
											"key": "sort",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get One Actor",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"pm.test(\"Test body attributes\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.title).to.eql(\"Not Found\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/api/actors/v1/1000",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"actors",
										"v1",
										"1000"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Actors Films",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"pm.test(\"Test body attributes\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.title).to.eql(\"Not Found\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/api/actors/v1/1000/films",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"actors",
										"v1",
										"1000",
										"films"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Actor Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Your test name\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.detail).to.eql(\"Invalid Data\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{   \r\n    \"actorId\": 0,\r\n    \"firstName\": \"A\",\r\n    \"lastName\": \"AA\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/api/actors/v1",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"actors",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Actor Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Your test name\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.detail).to.eql(\"Invalid Data\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{   \r\n    \"actorId\": 0,\r\n    \"firstName\": \"AAA\",\r\n    \"lastName\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/api/actors/v1",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"actors",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Modify Actor Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Your test name\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.detail).to.eql(\"ID's doesn't match\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{   \r\n    \"actorId\": 211,\r\n    \"firstName\": \"AAAAAAASSSASASS\",\r\n    \"lastName\": \"BBBBB\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/api/actors/v1/2",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"actors",
										"v1",
										"2"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Films",
			"item": [
				{
					"name": "OK",
					"item": [
						{
							"name": "Get All Films",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Json Array\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.be.an(\"array\");\r",
											"});\r",
											"pm.test(\"Json Data\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData[0].filmId).to.equals(1);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/api/films/v1",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"films",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get All Films Sort",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Json Array\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.be.an(\"array\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/api/films/v1?sort=title",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"films",
										"v1"
									],
									"query": [
										{
											"key": "sort",
											"value": "title"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get All Films Pageable",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Json Array\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.content).to.be.an(\"array\");\r",
											"});\r",
											"pm.test(\"Json Number of Page\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.number).to.equals(2);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/api/films/v1?page=2",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"films",
										"v1"
									],
									"query": [
										{
											"key": "page",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get One Film",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Json Id\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.filmId).to.equals(1);\r",
											"});\r",
											"pm.test(\"Json Actors Array\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.actors).to.be.an(\"array\");\r",
											"});\r",
											"pm.test(\"Json Categories Array\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.categories).to.be.an(\"array\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/api/films/v1/1",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"films",
										"v1",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Film",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Location\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"filmId\": 0,\r\n    \"description\": \"Description of an New FIlm\",\r\n    \"length\": 855,\r\n    \"rating\": \"R\",\r\n    \"releaseYear\": \"2023\",\r\n    \"rentalDuration\": 5,\r\n    \"rentalRate\": 0.88,\r\n    \"replacementCost\": 12.12,\r\n    \"title\": \"NEW FILM TITLE\",\r\n    \"languageId\": 1,\r\n    \"languageVOId\": 1,\r\n    \"actors\": [1,3,4,5],\r\n    \"categories\": [1,2]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/api/films/v1",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"films",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit Film",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"filmId\": 1,\r\n    \"description\": \"Description of an New FIlm\",\r\n    \"length\": 855,\r\n    \"rating\": \"R\",\r\n    \"releaseYear\": \"2023\",\r\n    \"rentalDuration\": 5,\r\n    \"rentalRate\": 0.88,\r\n    \"replacementCost\": 12.12,\r\n    \"title\": \"AMADEUS HOLY\",\r\n    \"languageId\": 1,\r\n    \"languageVOId\": 1,\r\n    \"actors\": [1,3,4,5],\r\n    \"categories\": [1,4]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/api/films/v1/1",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"films",
										"v1",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Film",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "localhost:8080/api/films/v1/1001",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"films",
										"v1",
										"1001"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Actors From Film (With ID)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Json Array\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.is.an(\"array\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/api/films/v1/1/actors",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"films",
										"v1",
										"1",
										"actors"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Categories From Film (With ID)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Json Array\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.is.an(\"array\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/api/films/v1/1/categories",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"films",
										"v1",
										"1",
										"categories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get All Films With News With Time",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Json Array\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.be.an(\"array\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/api/films/v1/news?time=2023-01-01 00:00:00",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"films",
										"v1",
										"news"
									],
									"query": [
										{
											"key": "time",
											"value": "2023-01-01 00:00:00"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get All Films With News (default = 10 days)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Json Array\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.be.an(\"array\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/api/films/v1/news",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"films",
										"v1",
										"news"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "KO",
					"item": [
						{
							"name": "Get All Films Sort",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 500\", function () {\r",
											"    pm.response.to.have.status(500);\r",
											"});\r",
											"pm.test(\"Error type\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.title).to.equals(\"Internal Server Error\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/api/films/v1?sort=fail",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"films",
										"v1"
									],
									"query": [
										{
											"key": "sort",
											"value": "fail"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get One Film",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"pm.test(\"Json Error\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.title).to.equals(\"Not Found\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/api/films/v1/100000",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"films",
										"v1",
										"100000"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Film",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Json Error\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.title).to.eql(\"Invalid Data\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"filmId\": 0,\r\n    \"description\": \"Description of an New FIlm\",\r\n    \"length\": 855,\r\n    \"rating\": \"R\",\r\n    \"releaseYear\": \"2023\",\r\n    \"rentalDuration\": 5,\r\n    \"rentalRate\": 0.88,\r\n    \"replacementCost\": 12.12,\r\n    \"languageId\": 1,\r\n    \"languageVOId\": 1,\r\n    \"actors\": [1,3,4,5],\r\n    \"categories\": [1,2]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/api/films/v1",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"films",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit Film 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Json Error\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.title).to.eql(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Json Error Detail\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.detail).to.eql(\"IDS doesn't match\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"filmId\": 13,\r\n    \"description\": \"Description of an New FIlm\",\r\n    \"length\": 855,\r\n    \"rating\": \"R\",\r\n    \"releaseYear\": \"2023\",\r\n    \"rentalDuration\": 5,\r\n    \"rentalRate\": 0.88,\r\n    \"replacementCost\": 12.12,\r\n    \"title\": \"NEW FILM TITLE\",\r\n    \"languageId\": 1,\r\n    \"languageVOId\": 1,\r\n    \"actors\": [1,3,4,5],\r\n    \"categories\": [1,4]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/api/films/v1/1",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"films",
										"v1",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit Film 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Json Error\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.title).to.eql(\"Invalid Data\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"filmId\": 1,\r\n    \"description\": \"Description of an New FIlm\",\r\n    \"length\": 855,\r\n    \"rating\": \"R\",\r\n    \"releaseYear\": \"2023\",\r\n    \"rentalDuration\": 5,\r\n    \"rentalRate\": 0.88,\r\n    \"replacementCost\": 12.12,\r\n    \"languageId\": 1,\r\n    \"languageVOId\": 1,\r\n    \"actors\": [1,3,4,5],\r\n    \"categories\": [1,4]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/api/films/v1/1",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"films",
										"v1",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get All Films With News Bad Format",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Json Array\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.title).to.equal(\"Bad Request\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/api/films/v1/news?time=a",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"films",
										"v1",
										"news"
									],
									"query": [
										{
											"key": "time",
											"value": "a"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Category",
			"item": [
				{
					"name": "OK",
					"item": [
						{
							"name": "Get All Category Order ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Body Json Array\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.be.an(\"array\");\r",
											"});\r",
											"pm.test(\"Body Json [0] ID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData[0].id).to.equals(1);\r",
											"});\r",
											"pm.test(\"Body Json [0] category\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData[0].category).to.equals(\"Action\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/api/category/v1",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"category",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Category Nº 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Body Json ID\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).to.equals(1);\r",
											"});\r",
											"pm.test(\"Body Json category\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.category).to.equals(\"Action\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/api/category/v1/1",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"category",
										"v1",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Location\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 0,\r\n    \"category\": \"NewCategory\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/api/category/v1",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"category",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Modify Category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 5,\r\n    \"category\": \"NewCategory2\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/api/category/v1/5",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"category",
										"v1",
										"5"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "localhost:8080/api/category/v1/17",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"category",
										"v1",
										"17"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Films From Category Number",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Json Data Array\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.be.an(\"array\");\r",
											"});\r",
											"pm.test(\"Array Firs Position Value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData[0].value).to.eql(\"AMADEUS HOLY\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/api/category/v1/1/films",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"category",
										"v1",
										"1",
										"films"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "KO",
					"item": [
						{
							"name": "Get Category Nº 999",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"pm.test(\"Body Json error\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.title).to.equals(\"Not Found\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/api/category/v1/999",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"category",
										"v1",
										"999"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Category Body Null",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Json Error\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.title).to.eql(\"Invalid Data\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 0,\r\n    \"category\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/api/category/v1",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"category",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Modify Category Bad Ids",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Error Title\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.title).to.eql(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Error Detail\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.detail).to.eql(\"IDs doesnt match\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 2,\r\n    \"category\": \"ChangeCategoryName\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/api/category/v1/1",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"category",
										"v1",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Films From Category Number Not Found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"pm.test(\"Error title\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.title).to.eql(\"Not Found\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/api/category/v1/999/films",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"category",
										"v1",
										"999",
										"films"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Catalogue",
			"item": [
				{
					"name": "OK",
					"item": [
						{
							"name": "Get Catalogue",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Json Data Have Films\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property(\"films\");\r",
											"});\r",
											"pm.test(\"Json Data Have Actors\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property(\"actors\");\r",
											"});\r",
											"pm.test(\"Json Films is Array\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.films).to.be.an(\"array\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/api/catalogue/v1",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"catalogue",
										"v1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Catalogue Time",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Json Data Have Films\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property(\"films\");\r",
											"});\r",
											"pm.test(\"Json Data Have Actors\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property(\"actors\");\r",
											"});\r",
											"pm.test(\"Json Films is Array\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.films).to.be.an(\"array\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/api/catalogue/v1?time=2023-04-11 00:00:00",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"catalogue",
										"v1"
									],
									"query": [
										{
											"key": "time",
											"value": "2023-04-11 00:00:00"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "KO",
					"item": [
						{
							"name": "Get Catalogue",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Json Error\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.title).to.eql(\"Bad Request\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/api/catalogue/v1?time=FAIL",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"catalogue",
										"v1"
									],
									"query": [
										{
											"key": "time",
											"value": "FAIL"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Language",
			"item": [
				{
					"name": "OK",
					"item": [
						{
							"name": "Get All Languages",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Json Array\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.be.an(\"array\");\r",
											"});\r",
											"pm.test(\"Json Array [0]\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData[0].id).to.equals(1);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/api/language",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"language"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get One Language",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Json Data Id\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).to.equals(1);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/api/language/1",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"language",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Language",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Location\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 0,\r\n    \"language\": \"Catalan\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/api/language",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"language"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Language",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "localhost:8080/api/language/7",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"language",
										"7"
									]
								}
							},
							"response": []
						},
						{
							"name": "Modify Language",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 5,\r\n    \"language\": \"Catalan\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/api/language/5",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"language",
										"5"
									],
									"query": [
										{
											"key": "",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get All Languages With Language Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Json Data Array\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.be.an(\"array\");\r",
											"});\r",
											"pm.test(\"Array Firs Position Value\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData[0].value).to.eql(\"AMADEUS HOLY\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/api/language/v1/1/films",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"language",
										"v1",
										"1",
										"films"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "KO",
					"item": [
						{
							"name": "Get One Language Fail ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"pm.test(\"Body Json error\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.title).to.equals(\"Not Found\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/api/language/999",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"language",
										"999"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Language Body Null",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Json Error\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.title).to.eql(\"Invalid Data\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 0,\r\n    \"language\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/api/language",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"language"
									]
								}
							},
							"response": []
						},
						{
							"name": "Modify Language Fail IDs",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Error Title\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.title).to.eql(\"Bad Request\");\r",
											"});\r",
											"pm.test(\"Error Detail\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.detail).to.eql(\"IDs doesnt match\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 3,\r\n    \"language\": \"Catalan\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:8080/api/language/5",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"language",
										"5"
									],
									"query": [
										{
											"key": "",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get All Languages With Language Id Not Found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"pm.test(\"Error title\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.title).to.eql(\"Not Found\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:8080/api/language/v1/999/films",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"language",
										"v1",
										"999",
										"films"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}